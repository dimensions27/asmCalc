     1                                 %line 1+1 calculator.asm
     2                                 
     3                                 
     4                                 %line 10+1 calculator.asm
     5                                 
     6                                 
     7                                 %line 19+1 calculator.asm
     8                                 
     9                                 [section .bss]
    10 00000000 <gap>                   buffer resb 10
    11 0000000A <gap>                   converted resd 5
    12 0000001E <gap>                   tempans resd 2
    13 00000026 <gap>                   result resd 1
    14 0000002A <gap>                   ascii resb 1
    15                                 
    16                                 [section .data]
    17                                  SYS_exit equ 60
    18                                  EXIT_SUCCESS equ 0
    19 00000000 456E74657220616E20-     msg1 db "Enter an Operation: "
    20 00000000 4F7065726174696F6E-
    21 00000000 3A20               
    22 00000014 203D20                  msg2 db " = "
    23                                 
    24                                 [section .text]
    25                                 [global _start]
    26                                 
    27                                 _start:
    28 00000000 48C7C001000000          mov rax, 1
    29                                 %line 37+0 calculator.asm
    30 00000007 48C7C701000000          mov rdi, 1
    31 0000000E 48C7C6[00000000]        mov rsi, msg1
    32 00000015 48C7C215000000          mov rdx, 21
    33 0000001C 0F05                    syscall
    34                                 %line 38+1 calculator.asm
    35 0000001E 48C7C000000000          mov rax, 0
    36                                 %line 38+0 calculator.asm
    37 00000025 48C7C700000000          mov rdi, 0
    38 0000002C 48C7C6[00000000]        mov rsi, buffer
    39 00000033 48C7C20A000000          mov rdx, 10
    40 0000003A 0F05                    syscall
    41                                 %line 39+1 calculator.asm
    42                                 
    43 0000003C E8B9000000              call toInt
    44                                 
    45 00000041 48C7C600000000          mov rsi, 0
    46 00000048 488B86[00000000]        mov rax, qword[converted+rsi]
    47                                 
    48                                 findOper:
    49                                 
    50 0000004F 6683F82B                cmp ax, 0x2b
    51 00000053 0F841B010000            je addition
    52                                 
    53 00000059 6683F82F                cmp ax, '/'
    54 0000005D 0F8449010000            je divide
    55                                 
    56 00000063 6683F82A                cmp ax, '*'
    57 00000067 0F8477010000            je multiply
    58                                 
    59 0000006D 6683F82D                cmp ax, '-'
    60 00000071 0F84A5010000            je subtract
    61                                 
    62 00000077 48FFC6                  inc rsi
    63 0000007A 6683F800                cmp ax, 0
    64 0000007E 75CD                    jne findOper
    65                                 
    66 00000080 668B0425[00000000]      mov ax, word[tempans]
    67 00000088 66890425[00000000]      mov word[result], ax
    68                                 end:
    69                                 
    70 00000090 E89D000000              call toString
    71                                 
    72 00000095 48C7C001000000          mov rax, 1
    73                                 %line 69+0 calculator.asm
    74 0000009C 48C7C701000000          mov rdi, 1
    75 000000A3 48C7C6[00000000]        mov rsi, buffer
    76 000000AA 48C7C20A000000          mov rdx, 10
    77 000000B1 0F05                    syscall
    78                                 %line 70+1 calculator.asm
    79 000000B3 48C7C001000000          mov rax, 1
    80                                 %line 70+0 calculator.asm
    81 000000BA 48C7C701000000          mov rdi, 1
    82 000000C1 48C7C6[00000000]        mov rsi, msg2
    83 000000C8 48C7C203000000          mov rdx, 3
    84 000000CF 0F05                    syscall
    85                                 %line 71+1 calculator.asm
    86 000000D1 48C7C001000000          mov rax, 1
    87                                 %line 71+0 calculator.asm
    88 000000D8 48C7C701000000          mov rdi, 1
    89 000000DF 48C7C6[00000000]        mov rsi, ascii
    90 000000E6 48C7C201000000          mov rdx, 1
    91 000000ED 0F05                    syscall
    92                                 %line 72+1 calculator.asm
    93                                 
    94 000000EF 48C7C03C000000          mov rax, SYS_exit
    95 000000F6 48C7C700000000          mov rdi, EXIT_SUCCESS
    96 000000FD 0F05                    syscall
    97                                 
    98                                 
    99                                 
   100                                 toInt:
   101 000000FF 66B80000                mov ax, 0
   102 00000103 66BB0A00                mov bx, 10
   103 00000107 48C7C600000000          mov rsi, 0
   104                                 input:
   105 0000010E 8A8E[00000000]          mov cl, byte[rsi+buffer]
   106 00000114 80E10F                  and cl, 0f
   107 00000117 00C8                    add al, cl
   108 00000119 80D400                  adc ah, 0
   109 0000011C 4883FE02                cmp rsi, 2
   110 00000120 7401                    je skip0
   111 00000122 66F7E3                  mul bx
   112                                 skip0:
   113 00000125 48FFC6                  inc rsi
   114 00000128 4883FE03                cmp rsi, 3
   115 0000012C 7CDE                    jl input
   116 0000012E 66890425[00000000]      mov word[converted], ax
   117 00000136 C3                      ret
   118                                 
   119                                 
   120                                 toString:
   121 00000137 668B0425[00000000]      mov ax, word[result]
   122 0000013F 48C7C100000000          mov rcx, 0
   123 00000146 66BB0A00                mov bx, 10
   124                                 
   125                                 divideLoop:
   126 0000014A 66BA0000                mov dx, 0
   127 0000014E 66F7F3                  div bx
   128 00000151 6652                    push dx
   129 00000153 48FFC1                  inc rcx
   130 00000156 6683F800                cmp ax, 0
   131 0000015A 75EC                    jne divideLoop
   132                                 
   133 0000015C 48C7C3[00000000]        mov rbx, ascii
   134 00000163 48C7C700000000          mov rdi, 0
   135                                 popLoop:
   136 0000016A 58                      pop rax
   137 0000016B 0430                    add al, "0"
   138 0000016D 88043B                  mov byte [rbx+rdi], al
   139 00000170 48FFC7                  inc rdi
   140 00000173 E2F3                    loop popLoop
   141 00000175 C6043B0A                mov byte [rbx+rdi], 10
   142 00000179 C3                      ret
   143                                 
   144                                 
   145                                 addition:
   146 0000017A 4883FE01                cmp rsi, 1
   147 0000017E 7518                    jne cont_add
   148                                 a_first:
   149 00000180 48FFCE                  dec rsi
   150 00000183 668B0437                mov ax, word[rdi+rsi]
   151 00000187 48FFC6                  inc rsi
   152 0000018A 48FFC6                  inc rsi
   153 0000018D 66030437                add ax, word[rdi+rsi]
   154 00000191 66890425[00000000]      mov word[tempans], ax
   155                                 
   156 00000199 C3                      ret
   157                                 
   158                                 cont_add:
   159 0000019A 668B0425[00000000]      mov ax, word[tempans]
   160 000001A2 48FFC6                  inc rsi
   161 000001A5 66030437                add ax, word[rdi+rsi]
   162 000001A9 66890425[00000000]      mov word[tempans], ax
   163 000001B1 C3                      ret
   164                                 
   165                                 
   166                                 divide:
   167 000001B2 4883FE01                cmp rsi, 1
   168 000001B6 7518                    jne cont_div
   169                                 d_first:
   170 000001B8 48FFCE                  dec rsi
   171 000001BB 668B1437                mov dx, word[rdi+rsi]
   172 000001BF 48FFC6                  inc rsi
   173 000001C2 48FFC6                  inc rsi
   174 000001C5 66F73437                div word[rdi+rsi]
   175 000001C9 66891425[00000000]      mov word[tempans], dx
   176 000001D1 C3                      ret
   177                                 
   178                                 cont_div:
   179 000001D2 668B1425[00000000]      mov dx, word[tempans]
   180 000001DA 48FFC6                  inc rsi
   181 000001DD 66F73437                div word[rdi+rsi]
   182 000001E1 66891425[00000000]      mov word[tempans], dx
   183 000001E9 C3                      ret
   184                                 
   185                                 
   186                                 multiply:
   187 000001EA 4883FE01                cmp rsi, 1
   188 000001EE 7518                    jne cont_mul
   189                                 m_first:
   190 000001F0 48FFCE                  dec rsi
   191 000001F3 668B0C37                mov cx, word[rdi+rsi]
   192 000001F7 48FFC6                  inc rsi
   193 000001FA 48FFC6                  inc rsi
   194 000001FD 66F72437                mul word[rdi+rsi]
   195 00000201 66890C25[00000000]      mov word[tempans], cx
   196 00000209 C3                      ret
   197                                 
   198                                 cont_mul:
   199 0000020A 668B0C25[00000000]      mov cx, word[tempans]
   200 00000212 48FFC6                  inc rsi
   201 00000215 66F72437                mul word[rdi+rsi]
   202 00000219 66890C25[00000000]      mov word[tempans], cx
   203 00000221 C3                      ret
   204                                 
   205                                 
   206                                 subtract:
   207 00000222 4883FE01                cmp rsi, 1
   208 00000226 7518                    jne cont_sub
   209                                 s_first:
   210 00000228 48FFCE                  dec rsi
   211 0000022B 668B1C37                mov bx, word[rdi+rsi]
   212 0000022F 48FFC6                  inc rsi
   213 00000232 48FFC6                  inc rsi
   214 00000235 662B1C37                sub bx, word[rdi+rsi]
   215 00000239 66891C25[00000000]      mov word[tempans], bx
   216                                 
   217 00000241 C3                      ret
   218                                 
   219                                 cont_sub:
   220 00000242 668B1C25[00000000]      mov bx, word[tempans]
   221 0000024A 48FFC6                  inc rsi
   222 0000024D 662B1C37                sub bx, word[rdi+rsi]
   223 00000251 66891C25[00000000]      mov word[tempans], bx
   224 00000259 C3                      ret
   225                                 
